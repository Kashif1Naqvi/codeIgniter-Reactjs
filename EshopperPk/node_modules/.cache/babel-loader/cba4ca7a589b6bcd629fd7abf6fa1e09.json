{"ast":null,"code":"import _defineProperty from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/API/EshopperPk/src/Admin/views/Pages/Register/Register.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, CardBody, CardFooter, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n    _this.state = {\n      Username: '',\n      Password: '',\n      user_email: '',\n      CreatedDate: '',\n      Status: '',\n      Role: '',\n      VendorId: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var state = this.state;\n      state[event.target.name] = event.target.value;\n      this.setState(state);\n      console.log(state);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      fetch('http://localhost/API/UserController/insertUsers', {\n        method: 'POST',\n        body: JSON.stringify({\n          user_id: this.state.user_id,\n          Username: this.state.Username,\n          Password: this.state.Password,\n          user_email: this.state.user_email,\n          CreatedDate: this.state.CreatedDate,\n          Status: this.state.Status,\n          Role: this.state.Role,\n          VendorId: this.state.VendorId\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return console.log(data);\n      }).catch(function (err) {\n        return console.log(\"show me error that cannot be specify\", err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(\"div\", {\n        className: \"app flex-row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Form, {\n        method: \"POST\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Input, (_React$createElement = {\n        required: true,\n        type: \"text\",\n        name: \"UserName\",\n        value: this.state.UserName,\n        onChange: this.handleChange,\n        placeholder: \"Username\",\n        autoComplete: \"username\"\n      }, _defineProperty(_React$createElement, \"name\", \"Username\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(Input, {\n        required: true,\n        type: \"text\",\n        placeholder: \"User email\",\n        name: \"user_email\",\n        value: this.state.user_email,\n        onChange: this.handleChange,\n        autoComplete: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Input, {\n        required: true,\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.Password,\n        onChange: this.handleChange,\n        name: \"Password\",\n        autoComplete: \"new-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"success\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Create Account\")));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/opt/lampp/htdocs/API/EshopperPk/src/Admin/views/Pages/Register/Register.js"],"names":["React","Component","Button","Card","CardBody","CardFooter","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Register","props","state","Username","Password","user_email","CreatedDate","Status","Role","VendorId","handleChange","bind","handleSubmit","event","target","name","value","setState","console","log","preventDefault","fetch","method","body","JSON","stringify","user_id","then","res","json","data","catch","err","UserName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardFooter, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\n\nclass Register extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        Username:'', Password:'', user_email:'',CreatedDate:'',Status:'',Role:'',VendorId:'',\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event){\n    const state = this.state;\n    state[event.target.name] = event.target.value;\n    this.setState(state);\n    console.log(state);\n  }\n\nhandleSubmit(event){\n    event.preventDefault();\n    fetch('http://localhost/API/UserController/insertUsers',{\n      method:'POST',\n      body:JSON.stringify({\n        user_id :this.state.user_id,\n        Username:this.state.Username,\n        Password:this.state.Password,\n        user_email:this.state.user_email,\n        CreatedDate:this.state.CreatedDate,\n        Status:this.state.Status,\n        Role: this.state.Role,\n        VendorId:this.state.VendorId,\n      }),\n    }).then(res =>res.json() )\n      .then(data => console.log(data))\n      .catch(err => console.log(\"show me error that cannot be specify\",err))\n  }\n\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n                  <Form method=\"POST\" onSubmit={this.handleSubmit}>\n                    <h1>Register</h1>\n                      <Input required  type=\"text\" name=\"UserName\" value={this.state.UserName} onChange={this.handleChange} placeholder=\"Username\" autoComplete=\"username\" name=\"Username\"  />\n                      <Input required  type=\"text\" placeholder=\"User email\" name=\"user_email\" value={this.state.user_email} onChange={this.handleChange} autoComplete=\"email\" />\n                      <Input required  type=\"password\" placeholder=\"Password\" value={this.state.Password} onChange={this.handleChange} name=\"Password\" autoComplete=\"new-password\" />\n                    <Button color=\"success\" block>Create Account</Button>\n                  </Form>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}