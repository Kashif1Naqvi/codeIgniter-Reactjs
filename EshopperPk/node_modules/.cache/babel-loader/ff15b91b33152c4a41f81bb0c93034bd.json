{"ast":null,"code":"import _defineProperty from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/opt/lampp/htdocs/API/EshopperPk/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/API/EshopperPk/src/Admin/views/Pages/Register/Register.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, CardBody, CardFooter, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.onFormSubmit(_this.state);\n\n      _this.setState(_this.initialState);\n    };\n\n    _this.state = {\n      Username: '',\n      Password: '',\n      user_email: ''\n    };\n    _this.onFormSubmit = _this.onFormSubmit.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var name = event.target.value;\n      var value = event.target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(data) {\n      var apiUrl = \"http://localhost/API/UserController/insertUsers\";\n      var myHeaders = new myHeaders();\n      myHeaders.append('Content-Type', 'application/json');\n      var options = {\n        method: 'POST',\n        body: JSON.stringify(data),\n        myHeaders: myHeaders\n      };\n      fetch(apiUrl, options).then(function (res) {\n        return res.json;\n      }).then(function (result) {\n        console.log(result);\n      }).then(function (error) {\n        return console.log(error);\n      });\n      this.setState({\n        Username: '',\n        user_email: '',\n        Password: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app flex-row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Input, {\n        required: true,\n        type: \"text\",\n        name: \"UserName\",\n        value: this.state.UserName,\n        onChange: this.handleChange,\n        placeholder: \"Username\",\n        autoComplete: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Input, {\n        required: true,\n        type: \"text\",\n        placeholder: \"User email\",\n        name: \"user_email\",\n        value: this.state.user_email,\n        onChange: this.handleChange,\n        autoComplete: \"user_email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Input, {\n        required: true,\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.Password,\n        onChange: this.handleChange,\n        name: \"Password\",\n        autoComplete: \"new-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"success\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Create Account\")));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/opt/lampp/htdocs/API/EshopperPk/src/Admin/views/Pages/Register/Register.js"],"names":["React","Component","Button","Card","CardBody","CardFooter","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Register","props","handleSubmit","event","preventDefault","onFormSubmit","state","setState","initialState","Username","Password","user_email","bind","handleChange","name","target","value","data","apiUrl","myHeaders","append","options","method","body","JSON","stringify","fetch","then","res","json","result","console","log","error","UserName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardFooter, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nclass Register extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      Username:'',\n      Password:'',\n      user_email:'',\n    }\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \thandleChange(event){\n    const name  = event.target.value;\n    const value = event.target.value;\n\n    this.setState({\n      [name]: value\n    });\n    } \n\n    handleSubmit=(event)=>{\n     event.preventDefault();\n     this.onFormSubmit(this.state);\n      this.setState(this.initialState);\n\n    }\n    onFormSubmit(data){\n      const apiUrl = \"http://localhost/API/UserController/insertUsers\";\n\n      const myHeaders = new myHeaders();\n      myHeaders.append('Content-Type','application/json');\n      const options = {\n        method:'POST',\n        body:JSON.stringify(data),\n        myHeaders\n      };\n      fetch(apiUrl,options)\n        .then(res => res.json )\n        .then(result =>{\n          console.log(result);\n        })\n        .then(error=>console.log(error))\n\n        this.setState({\n        Username:'',\n        user_email:'',\n        Password:'',\n        });\n    }\n  render() {\n    return (\n       <div className=\"app flex-row align-items-center\">\n        \n                  <Form  onSubmit={this.handleSubmit}>\n                   \n                      <Input required  type=\"text\" name=\"UserName\" value={this.state.UserName} onChange={this.handleChange} placeholder=\"Username\" autoComplete=\"username\"   />\n                  \n                      <Input required  type=\"text\" placeholder=\"User email\" name=\"user_email\" value={this.state.user_email} onChange={this.handleChange} autoComplete=\"user_email\" />\n                 \n                      <Input required  type=\"password\" placeholder=\"Password\" value={this.state.Password} onChange={this.handleChange} name=\"Password\" autoComplete=\"new-password\" />\n                   \n                    <Button color=\"success\" block>Create Account</Button>\n                  </Form>\n               \n      </div>\n    );\n  }\n}\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}